name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main  # or master, depending on your default branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          # Vite requires Node >=20.19.0; use a compatible Node 20.x release
          node-version: '20.19.0'
          # Do not use the npm cache here. Restoring cached platform-specific
          # native artifacts (from macOS/dev machine) can cause Rollup to try
          # to load the wrong native binary on the Linux runner.
          # cache: 'npm'

      - name: Install dependencies (try safe install, fallback if necessary)
        run: |
          echo "Runner platform: $(uname -a)"
          node -v || true
          npm -v || true
          # Ensure npm cache is clean to avoid stale/native artifacts
          npm cache clean --force || true

          # Try a reproducible install first. If npm ci fails (npm optional
          # deps bug with native artifacts), fall back to removing
          # package-lock.json and node_modules and run npm install.
          if npm ci; then
            echo "npm ci succeeded"
          else
            echo "npm ci failed â€” removing package-lock.json and node_modules and retrying with npm install"
            rm -rf node_modules package-lock.json
            npm install
          fi

      - name: Build
        env:
          REACT_APP_SUPABASE_URL: ${{ secrets.REACT_APP_SUPABASE_URL }}
          REACT_APP_SUPABASE_ANON_KEY: ${{ secrets.REACT_APP_SUPABASE_ANON_KEY }}
          REACT_APP_ADMIN_PASSWORD: ${{ secrets.REACT_APP_ADMIN_PASSWORD }}
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
